# Puppet CI Resources
classes:
  - nsidc_jenkins
  - nsidc_nfs

# NFS Mounts
nsidc_nfs::sharemounts:
  /share/sw/packages:
    project: sw
    share: packages

# Jenkins Plugins
nsidc_jenkins::plugins:
  simple-theme-plugin: {}

search-solr-tools-name: search-solr-tools
deploy_solr_tools_command: |
  rm -rf .vagrant-$ENV
  vagrant nsidc hijack --env=$ENV --project=search-solr || true
  vagrant nsidc ssh --env=$ENV --project=search-solr -c "cd /vagrant; bundle install; bundle info search_solr_tools"

provision_solr_command: |
  rm -rf .vagrant-$ENV
  (vagrant nsidc hijack --env=$ENV || true)
  (vagrant nsidc destroy --env=$ENV || true)
  vagrant nsidc up --env=$ENV
  bundle exec rake jenkins:release:tag_deployment[$ENV]

harvest_nsidc_command: |
  rm -rf .vagrant-$ENV
  (vagrant nsidc hijack --env=$ENV --project=search-solr || true)
  vagrant nsidc ssh --env=$ENV --project=search-solr -c "cd /vagrant; bundle exec search_solr_tools harvest --data_center=nsidc --environment=$ENV"
  vagrant nsidc ssh --env=$ENV --project=search-solr -c "cd /vagrant; bundle exec search_solr_tools harvest --data_center=nsidc_auto_suggest --environment=$ENV"

harvest_ade_command: |
  if [ "$data_center" = "bco_dmo" ]
  then
      set +e
  fi
  vagrant nsidc ssh --env=$ENV --project=search-solr -c "cd /vagrant; bundle exec search_solr_tools harvest --data-center=${data_center} --environment=${ENV}"
  true

integration_workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/integration
qa_workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/qa
staging_workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/staging
blue_workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/blue

# Jenkins Jobs
nsidc_jenkins::jobs:
  # clone the project into the shared workspace
  "A01_%{hiera('project')}_Integration_Checkout_Project":
    workspace: "%{hiera('integration_workspace')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: main
    git:
      repo: "%{hiera('gitrepo')}"
      poll_scm: true
      branches: main
      checkout_local: '**'
    command: |
      git checkout $ref
    trigger_job: "A02_%{hiera('project')}_Integration_Install_Dependencies"

  "A02_%{hiera('project')}_Integration_Install_Dependencies":
    workspace: "%{hiera('integration_workspace')}"
    command: |
      #!/bin/bash -l
      bundle install
    trigger_job: "A03_%{hiera('project')}_Integration_Provision"

  "A03_%{hiera('project')}_Integration_Provision":
    command: |
      #!/bin/bash -l
      ENV=integration
      %{hiera('provision_solr_command')}
    workspace: "%{hiera('integration_workspace')}"
    trigger_job: "A04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem"

  "A04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem":
    workspace: "%{hiera('integration_workspace')}"
    parameters:
      - type: string
        name: gem_version
        description: >-
          The version of search_solr_tools to install; if none is given, the
          latest (non-prerelease) release will be installed.
        default: ""
    command: |
      ENV=integration
      %{hiera('deploy_solr_tools_command')}
    trigger_job: "A05_%{hiera('search-solr-tools-name')}_Integration_Harvest_NSIDC"

  "A05_%{hiera('search-solr-tools-name')}_Integration_Harvest_NSIDC":
    command: |
      ENV=integration
      %{hiera('harvest_nsidc_command')}
    workspace: "%{hiera('integration_workspace')}"
    trigger_job: "A07_%{hiera('project')}_Integration_Acceptance_Tests"

  "A07_%{hiera('project')}_Integration_Acceptance_Tests":
    command: |
      ENV=integration
      rm -rf .vagrant-$ENV
      (vagrant nsidc hijack --env=$ENV --project=search-solr || true)
      vagrant nsidc ssh --env=$ENV --project=search-solr -c 'cd /vagrant; bundle install; bundle exec rake spec:acceptance'
    workspace: /var/lib/jenkins/workspaces/search-solr/integration

  "B01_%{hiera('project')}_QA_Checkout_Project":
    git:
      repo: "%{hiera('gitrepo')}"
      wipe_workspace: true
      branches: main
      checkout_local: '**'
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: main
    command: |
      git checkout $ref
    workspace: "%{hiera('qa_workspace')}"
    trigger_job: "B02_%{hiera('project')}_QA_Install_Dependencies"

  "B02_%{hiera('project')}_QA_Install_Dependencies":
    command: |
      #!/bin/bash -l
      bundle install
    workspace: "%{hiera('qa_workspace')}"
    trigger_job: "B03_%{hiera('project')}_QA_Provision"

  "B03_%{hiera('project')}_QA_Provision":
    command: |
      #!/bin/bash -l
      ENV=qa
      %{hiera('provision_solr_command')}
    workspace: "%{hiera('qa_workspace')}"
    trigger_job: "B04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem"

  "B04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem":
    workspace: "%{hiera('qa_workspace')}"
    parameters:
      - type: string
        name: gem_version
        description: >-
          The version of search_solr_tools to install; if none is given, the
          latest (non-prerelease) release will be installed.
        default: ""
    command: |
      ENV=qa
      %{hiera('deploy_solr_tools_command')}
    trigger_job: "B05_%{hiera('search-solr-tools-name')}_QA_Harvest_NSIDC"

  "B05_%{hiera('search-solr-tools-name')}_QA_Harvest_NSIDC":
    command: |
      ENV=qa
      %{hiera('harvest_nsidc_command')}
    workspace: "%{hiera('qa_workspace')}"
    trigger_job: "B07_%{hiera('project')}_QA_Acceptance_Tests"

  "B07_%{hiera('project')}_QA_Acceptance_Tests":
    command: |
      ENV=qa
      rm -rf .vagrant-$ENV
      (vagrant nsidc hijack --env=$ENV --project=search-solr || true)
      vagrant nsidc ssh --env=$ENV --project=search-solr -c 'cd /vagrant; bundle install; bundle exec rake spec:acceptance'
    workspace: "%{hiera('qa_workspace')}"

  "C01_%{hiera('project')}_Staging_Checkout_Project":
    git:
      repo: "%{hiera('gitrepo')}"
      wipe_workspace: true
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: qa
    command: |
      git checkout $ref
    workspace: "%{hiera('staging_workspace')}"
    trigger_job: "C02_%{hiera('project')}_Staging_Install_Dependencies"

  "C02_%{hiera('project')}_Staging_Install_Dependencies":
    command: |
      #!/bin/bash -l
      bundle install
    workspace: "%{hiera('staging_workspace')}"
    trigger_job: "C03_%{hiera('project')}_Staging_Provision"

  "C03_%{hiera('project')}_Staging_Provision":
    command: |
      #!/bin/bash -l
      ENV=staging
      %{hiera('provision_solr_command')}
    workspace: "%{hiera('staging_workspace')}"
    trigger_job: "C04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem"

  "C04_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem":
    workspace: "%{hiera('staging_workspace')}"
    parameters:
      - type: string
        name: gem_version
        description: >-
          The version of search_solr_tools to install; if none is given, the
          latest (non-prerelease) release will be installed.
        default: ""
    command: |
      ENV=staging
      %{hiera('deploy_solr_tools_command')}
    trigger_job: "C05_%{hiera('search-solr-tools-name')}_Staging_Harvest_NSIDC"

  "C05_%{hiera('search-solr-tools-name')}_Staging_Harvest_NSIDC":
    command: |
      ENV=staging
      %{hiera('harvest_nsidc_command')}
    workspace: "%{hiera('staging_workspace')}"
    trigger_job: "C07_%{hiera('project')}_Staging_Acceptance_Tests"

  "C07_%{hiera('project')}_Staging_Acceptance_Tests":
    command: |
      ENV=staging
      rm -rf .vagrant-$ENV
      (vagrant nsidc hijack --env=$ENV --project=search-solr || true)
      vagrant nsidc ssh --env=$ENV --project=search-solr -c 'cd /vagrant; bundle install; bundle exec rake spec:acceptance'
    workspace: "%{hiera('staging_workspace')}"
    trigger_job: "D01_%{hiera('search-solr-tools-name')}_Blue_Checkout_Project"

  "D01_%{hiera('project')}_Blue_Provision":
    git:
      repo: "%{hiera('gitrepo')}"
      wipe_workspace: true
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: staging
    command: |
      #!/bin/bash -l
      ENV=blue
      git checkout $ref
      bundle install
      %{hiera('provision_solr_command')}
    workspace: "%{hiera('blue_workspace')}"
    trigger_job: "D02_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem"

  "D02_%{hiera('search-solr-tools-name')}_Deploy_solr-search-tools-gem":
    workspace: "%{hiera('blue_workspace')}"
    parameters:
      - type: string
        name: gem_version
        description: >-
          The version of search_solr_tools to install; if none is given, the
          latest (non-prerelease) release will be installed.
        default: ""
    command: |
      ENV=blue
      %{hiera('deploy_solr_tools_command')}
    trigger_job: "D03_%{hiera('search-solr-tools-name')}_Blue_Harvest_NSIDC"

  "D03_%{hiera('search-solr-tools-name')}_Blue_Harvest_NSIDC":
    command: |
      ENV=blue
      %{hiera('harvest_nsidc_command')}
    workspace: "%{hiera('blue_workspace')}"
    trigger_job: "D04_%{hiera('search-solr-tools-name')}_Blue_Harvest_ADE"

  "D04_%{hiera('search-solr-tools-name')}_Blue_Harvest_ADE":
    description: Start a sequential harvest of all of the ADE metadata sources.
    workspace: "%{hiera('blue_workspace')}"
    trigger_job: "ZZOLD_D06%{hiera('search-solr-tools-name')}_Blue_Harvest_ADE_adc"
    trigger_threshold: FAILURE

  "E01_%{hiera('project')}_Release_Bump_Version":
    git:
      repo: "%{hiera('gitrepo')}"
      wipe_workspace: true
      branches: main
      checkout_local: '**'
    parameters:
      - type: string
        name: branch
        description: git branch to checkout and tag
        default: main
      - type: choice
        name: version_part
        choices:
        - patch
        - minor
        - major
    command: |
      #!/bin/bash -l
      git checkout $branch

      bundle install
      bundle exec rake jenkins:release:bump[$version_part]
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/release
    trigger_job: "E02_%{hiera('project')}_Release_Push_to_Git"

  "E02_%{hiera('project')}_Release_Push_to_Git":
    command: |
      #!/bin/bash -l
      bundle exec rake jenkins:release:push
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/release